@page "/hero"
@page "/hero/{id:int}"
@inject ISuperHeroService SuperHeroService


@if (Id == null)
{
    <PageTitle>Create New Super Hero</PageTitle>
    <h3>Create a New Super Hero</h3>
}
else 
{
    <PageTitle>Edit @hero.HeroName</PageTitle>
}

<h3>Edit @hero.HeroName</h3>

<EditForm Model="hero" OnSubmit="HandleSubmit">
    <div>
        <lable for="firstname"> First Name</lable>
        <InputText id="firstname" @bind-Value="hero.FirstName" class="form-control"></InputText>
    </div>

    <div>
        <lable for="lastname"> Last Name</lable>
        <InputText id="lastname" @bind-Value="hero.LastName" class="form-control"></InputText>
    </div>

    <div>
        <lable for="heroname"> Hero Name</lable>
        <InputText id="heroname" @bind-Value="hero.HeroName" class="form-control"></InputText>
    </div>

    <div>
        <label>Comic</label><br/>
        <InputSelect @bind-Value="hero.ComicId" class="form-select">
            @foreach(var comic in SuperHeroService.Comics)
            {
                <option value="@comic.Id">@comic.Name</option>
            }
        </InputSelect>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteHero">Delete Hero</button>
</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    SuperHero hero = new SuperHero { Comic = new Comic() };
    public static object FirstName;
    public static object LastName;
    public static object HeroName;
    public static object ComicId;

    public Hero()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Hero" : "Update Hero";
        await SuperHeroService.GetComics();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            // Create a new hero
            hero.Comic = SuperHeroService.Comics[0];
            hero.ComicId = hero.Comic.Id;
        }
        else
        {
            hero = await SuperHeroService.GetSingleHero((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await SuperHeroService.CreateHero(hero);
        }
        else
        {
            await SuperHeroService.UpdateHero(hero);
        }


    }

    async Task DeleteHero()
    {
        await SuperHeroService.DeleteHero(hero.id);
    }

}
